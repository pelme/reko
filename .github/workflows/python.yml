# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "12"
      - name: Setup pip/poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.1.0
      - name: .venv cache
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('pyproject.toml', 'poetry.lock') }}-v2
      - name: Install venv dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: node_modules cache
        id: cache-node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package.json', 'package-lock.json') }}-v1
      - name: Install node dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm install

      - name: Debug output
        run: |
          parcel --version
          poetry run django-admin --help
          poetry env info
          echo which pip
          which pip
          echo which poetry
          which poetry
  mypy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: poetry run mypy --strict --strict-equality src
